rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /** ============================
     *  Helper predicates
     *  ============================ */
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(uid) {
      return isSignedIn() && request.auth.uid == uid;
    }

    // Custom claim set by setAdmin.ts (admin:true)
    function isAdmin() {
      return isSignedIn() && request.auth.token.admin == true;
    }

    /** ===============================================================
     *  1) App configuration
     *  --------------------------------------------------------------- */
    match /config/{docPath=**} {
      // User ĐĂNG NHẬP cần đọc để filter A/B/C trên client
      allow read: if isSignedIn();
      // Chỉ admin được ghi
      allow write: if isAdmin();
    }

    /** ===============================================================
     *  2) Hồ sơ người dùng + Attempts
     *  --------------------------------------------------------------- */
    match /users/{uid} {

      // Chủ sở hữu đọc & cập nhật hồ sơ của CHÍNH MÌNH (nếu cần)
      allow read: if isOwner(uid);
      allow create, update: if isOwner(uid);
      allow delete: if false;

      // Attempts của chính chủ
      match /attempts/{aid} {
        // Tạo attempt: chỉ chính chủ + tối thiểu cấu trúc hợp lệ
        allow create: if isOwner(uid)
          && request.resource.data.answers is list
          && request.resource.data.keys().hasAll([
               'courseId','subjectId','examYear',
               'startedAt','finishedAt','durationSec',
               'answers'
             ]);

        // Đọc attempt: chính chủ hoặc admin
        allow read: if isOwner(uid) || isAdmin();

        // Không cho sửa/xoá attempt sau khi nộp
        allow update, delete: if false;
      }

      // Wrong/flagged các câu: chỉ chính chủ
      match /wrongs/{qid} {
        allow read, write: if isOwner(uid);
      }

      // ✅ Catch-all: chặn mọi collection khác dưới users/{uid}
      // (chỉ 1 glob duy nhất trong path → hợp lệ)
      match /{path=**} {
        allow read, write: if false;
      }
    }

    /** ===============================================================
     *  3) Khu vực dành riêng cho Admin
     *  --------------------------------------------------------------- */
    match /admin/{docPath=**} {
      allow read, write: if isAdmin();
    }

    /** ===============================================================
     *  4) (Tuỳ chọn) Enrollments
     *  --------------------------------------------------------------- */
    match /enrollments/{enrId} {
      allow read: if isSignedIn() && resource.data.userId == request.auth.uid;
      allow write: if false;
    }

    /** ===============================================================
     *  5) Mặc định: CHẶN tất cả
     *  =============================================================== */
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
